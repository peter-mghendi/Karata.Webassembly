@page "/login"

<EditForm Model="@formModel" OnValidSubmit="@TryAuth" class="form-signin">
    <DataAnnotationsValidator />

    <div class="text-center mb-4">
        <img class="mb-4" src="icon-512.png" alt="" width="72" height="72">
        <h1 class="h3 mb-3 font-weight-normal">Sign In</h1>
        <p>Welcome back!</p>
    </div>

    <div class="form-group">
        <label for="email-address">Email Address</label>
        <InputText id="email-address" @bind-Value="formModel.Email" class="form-control" placeholder="Email Address" disabled=@loading />
        <ValidationMessage For=@(() => formModel.Email) />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="formModel.Password" class="form-control" placeholder="Password" disabled=@loading type="password" />
        <ValidationMessage For=@(() => formModel.Password) />
    </div>

    @*<input class="btn btn-primary btn-block" type="submit" disabled=@loading value=@buttonText/>*@
    <button class="btn btn-outline-primary btn-block" type="submit" disabled=@loading>
        @if (loading)
        {
            <span class="spinner-grow spinner-grow-sm mr-2"></span>  
        }
        @buttonText
    </button>

    <p class="mt-5 mb-3 text-muted text-center">© 2020</p>
</EditForm>

@code 
{
    [Inject]
    private IKarataClient Client { get; set; }

    private bool loading = false;

    private string buttonText { get => loading ? "Loading..." : "Sign In"; }

    private LoginRequest formModel = new();

    private async Task TryAuth()
    {
        loading = true;

        try
        {
            var result = await Client.AuthenticateAsync(formModel);
            Console.WriteLine($"Login Request Successful!\nToken: {result.AccessToken}");
        }
        catch
        {
            // TODO: Show error
        }

        formModel.Password = string.Empty;
        loading = false;
    }
}